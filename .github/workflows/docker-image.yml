name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cafestaticweb:v${{ github.run_number }}
  
  
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      - uses: actions/checkout@v2 
      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
          #DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/cafestaticweb
          DOCKER_IMAGE: neehar2601/cafestaticweb
          #DOCKER_TAG: v${{ github.run_number }}
          DOCKER_TAG: latest
  
        run: |
          echo "DOCKER_IMAGE: $DOCKER_IMAGE"
          echo "DOCKER_TAG: $DOCKER_TAG"
          
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key

          # Set the environment variables before running the SSH command
          export DOCKER_IMAGE=${DOCKER_IMAGE}
          export DOCKER_TAG=${DOCKER_TAG}
          
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          # Now we have got the access of EC2 and we will start the deploy .
          sudo apt update -y
          sudo apt install docker.io -y
          sudo systemctl status docker
          
          # Debugging
          echo "DOCKER_IMAGE: $DOCKER_IMAGE"
          echo "DOCKER_TAG: $DOCKER_TAG"
          
          # Explicitly export variables to the remote session
          export DOCKER_IMAGE=${DOCKER_IMAGE}
          export DOCKER_TAG=${DOCKER_TAG}
          
          # Run the Docker container
          # sudo docker run -d -p 80:80 "$DOCKER_IMAGE:$DOCKER_TAG"
          sudo docker run -d -p 80:80 neehar2601/cafestaticweb:latest
          sudo docker ps
          '
